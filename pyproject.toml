[build-system]
requires = ["setuptools>=61.2", "tox>=4.21", "tox-uv>=1.13"]
build-backend = "setuptools.build_meta"

[project]
name = "minqlx_plugin_tests"
version = "0.0.1"
authors = [{name = "Markus 'ShiN0' Gaertner"}]
license = {text = "BSD-3-Clause"}
classifiers = [
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
]
requires-python = ">=3.8"
dependencies = [
    "setuptools>=61.2",
    "pyzmq>=23",
    "redis>=2.10",
    "urllib3>=1.24.3",
    "requests>=2.20",
    "aiohttp>=3.7.4",
    "aiohttp-retry>=2.4",
    "discord.py>=2.0; python_version >= '3.8'",
    "schedule>=1.0.0; python_version >= '3.8'",
    "openai>=1.2.0",
    "tiktoken>=0.3.0; python_version >= '3.0'",
    "emoji>=2.2.0",
    "psutil>=5.9.5",
    "distro>=1.8.0",
    "humanize>=4.6.0",
]

[project.optional-dependencies]
tests = [
    "redis>=3.0",
    "pytest>=7.0.1",
    "pytest-asyncio>=0.24; python_version >= '3.8'",
    "pytest-clarity>=1.0.0",
    "PyHamcrest>=2.0",
    "mockito>=1.3.3",
    "undecorated>=0.1.0"
]
coverage = [ "coverage>=6.0", "minqlx_plugin_tests[tests]" ]
ruff = [ "ruff>=0.2" ]
mypy = [ "mypy>=0.990", "types-redis>=4.3", "types-requests>=0.1.0" ]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/mgaertne/minqlx-plugin-tests"

[tool.setuptools]
license-files = ["LICENSE"]
include-package-data = false

[tool.setuptools.packages]
find = {namespaces = false}

[tool.tox]
env_list = [ "py38", "py39", "py310", "py311", "py312", "py313", "coverage", "ruff", "mypy" ]
use_develop = true

[tool.tox.gh-actions]
python = """
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313
"""

[tool.tox.env_run_base]
extras = [ "tests" ]
commands = [["pytest", { replace = "posargs", default = [], extend = true }]]

[tool.tox.env.coverage]
extras = [ "coverage" ]
commands = [
    ["coverage", "erase"],
    ["coverage", "run", "-m", "pytest", { replace = "posargs", default = ["tests"], extend = true }],
    ["coverage", "report"],
    ["coverage", "xml"],
    ["coverage", "html"],
]

[tool.tox.env.ruff]
extras = [ "ruff" ]
commands = [[ "ruff", "check", { replace = "posargs", default = ["src", "stubs", "tests"], extend = true }]]

[tool.tox.env.mypy]
extras = [ "mypy" ]
commands = [[ "mypy", { replace = "posargs", default = [], extend = true }]]

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
pythonpath = [
    "src",
    "tests",
]
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.paths]
source = [
    "src"
]

[tool.coverage.run]
omit = [
    "src/minqlx/*",
    "src/experimental/*",
    "tests/*",
    "tests/minqlx_plugin_test/*",
]

[tool.ruff]
exclude = [
    ".eggs",
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pypackages__",
    "build",
    "dist",
    "venv",
]
line-length = 120
target-version = "py37"

[tool.ruff.lint]
select = ["C40", "E", "F", "SIM", "TCH"]
ignore = []
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []
per-file-ignores = {}
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
mccabe.max-complexity = 10

[tool.mypy]
packages = ["stubs","src","tests"]
check_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_unused_configs = true
no_implicit_reexport = true

[[tool.mypy.overrides]]
module = "stubs.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
